@model FindABand.ViewModels.MessageViewModel

@{
    ViewData["Title"] = "Messages";
}

<h1>Messages</h1>

<style>
    #messages{
        overflow: scroll; 
        width: 960px;
        height: 500px;
    }
</style>
<div id="messages">
<table class="table">
    <tbody>
        @foreach (var item in Model.Messages)
        {
            @if (item.SenderId == Model.MyProfileId || (item.SenderBandId == Model.MyBandId && Model.MyBandId != null) )
            {
                <tr>
                    <td>
                        <p><span style="color: green;">You Said</span> @Html.DisplayFor(modelItem => item.Text)</p>
                    </td>
                </tr>
            }
            else
            {
                <tr>
                    <td>
                        <p><span style="color: red;">@Model.Name Said</span> @Html.DisplayFor(modelItem => item.Text)</p>
                    </td>

                </tr>
            }
        }
    </tbody>
</table>
</div>


<form asp-action="Messages">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <div class="form-group">
        <input id="text"
               name="text"
               type="text"
               value="" />
    </div>

    <div class="form-group">
        <input id="usermId"
               name="usermId"
               type="hidden"
               value="@Model.UserId" />

    </div>
    <div class="form-group">
        <input id="bandmId"
               name="bandmId"
               type="hidden"
               value="@Model.BandId" />
    </div>

    <div class="form-group">
        <input id="bandsId"
               name="bandsId"
               type="hidden"
               value="@Model.MyBandId" />
    </div>
    <div class="form-group">
        <input type="submit" value="Send" class="btn btn-primary" />
    </div>
</form>

<script src="~/lib/signalr/dist/browser/signalr.js"></script>

<script>
    var messagesDiv = document.getElementById("messages");
    messagesDiv.scrollTop = messagesDiv.scrollHeight;
</script>
@*<script src="~/js/Chat.js"></script>*@

@*<script>


    var connection = new signalR.HubConnectionBuilder().withUrl("/chatHub").build();

    //Disable send button until connection is established
    document.getElementById("sendButton").disabled = true;

    connection.on("ReceiveMessage", function (user, message) {
        var msg = message.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
        var encodedMsg = user + " says " + msg;
        var li = document.createElement("li");
        li.textContent = encodedMsg;
        document.getElementById("messagesList").appendChild(li);
    });

    connection.start().then(function () {
        document.getElementById("sendButton").disabled = false;
    }).catch(function (err) {
        return console.error(err.toString());
    });
            var userId1 = "@Model.MyId";
        var userId2 = "@Model.UserId";
    document.getElementById("sendButton").addEventListener("click", function (event) {
        var user = document.getElementById("userInput").value;
        var message = document.getElementById("messageInput").value;
        connection.invoke("SendMessage", "@Model.MyId", "@Model.UserId", message).catch(function (err) {
            return console.error(err.toString());
        });
        event.preventDefault();
    });
    </script>*@

@*<div class="container">
    <div class="row">&nbsp;</div>
    <div class="row">
        <div class="col-6">&nbsp;</div>
        <div class="col-6">
            User<input type="text" id="userInput" />
            <br />
            Message...<input type="text" id="messageInput" />
            <input type="button" id="sendButton" value="Send Message" />
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            <hr />
        </div>
    </div>
    <div class="row">
        <div class="col-6">&nbsp;</div>
        <div class="col-6">
            <ul id="messagesList"></ul>
        </div>
    </div>
</div>*@
